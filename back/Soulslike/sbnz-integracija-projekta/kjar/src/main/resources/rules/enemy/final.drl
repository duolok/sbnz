package rules.enemy;

import com.ftn.sbnz.model.models.*;

global java.util.List enemyCandidates;
global com.ftn.sbnz.model.models.Enemy selectedEnemy;

rule "Select Best Enemy by Score"
    agenda-group "final-selection"
    salience 100
    when
        $context : GameContext()
        accumulate(
            Enemy($score : score) from enemyCandidates,
            $maxScore : max($score)
        )
        $bestEnemy : Enemy(score == $maxScore) from enemyCandidates
    then
        selectedEnemy = $bestEnemy;
        System.out.println("Phase 7 - Selected: " + $bestEnemy.getName() + " (Score: " + $maxScore + ")");
end

rule "Fallback Selection - No Score"
    agenda-group "final-selection"
    salience 50
    when
        $context : GameContext()
        exists(Enemy() from enemyCandidates)
        eval(selectedEnemy == null)
    then
        Enemy firstEnemy = (Enemy)enemyCandidates.get(0);
        selectedEnemy = firstEnemy;
        System.out.println("Phase 7 - Fallback selected: " + firstEnemy.getName());
end