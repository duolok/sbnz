template header
enemyName
enemyType
region
minHp
maxHp
minDamage
maxDamage
defense
behaviour
primaryAbility
secondaryAbility
statusEffect
resistance
baseScore
minPlayerLevel
maxPlayerLevel
requiredDifficulty

package templates;

import com.ftn.sbnz.model.models.Enemy;
import com.ftn.sbnz.model.models.Player;
import com.ftn.sbnz.model.models.GameContext;

global java.util.List enemyCandidates;

template "boss-generation-rules"

rule "Generate Boss @{row.rowNumber} - @{enemyName}"
    agenda-group "template-generation"
    salience 110
    when
        $context : GameContext(region == "@{region}", difficulty == "@{requiredDifficulty}")
        $player : Player(level >= @{minPlayerLevel})
        not Enemy(type == "boss", region == "@{region}")
    then
        Enemy boss = new Enemy("@{enemyName}", "boss");
        boss.setRegion("@{region}");
        boss.setHp(@{maxHp});
        boss.setDamage(@{maxDamage});
        boss.setDefense(@{defense} * 1.5);
        boss.setBehaviour("@{behaviour}");
        boss.addAbility("@{primaryAbility}");
        boss.addAbility("@{secondaryAbility}");
        boss.addAbility("special-attack");
        boss.addStatusEffect("@{statusEffect}");
        boss.addResistance("@{resistance}");
        boss.setScore(@{baseScore} * 2);
        enemyCandidates.add(boss);
        insert(boss);
        System.out.println("Boss Template Generated: @{enemyName} for @{region}");
end

end template