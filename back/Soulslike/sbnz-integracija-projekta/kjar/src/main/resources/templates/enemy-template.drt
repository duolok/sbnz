template header
enemyName
enemyType
region
minHp
maxHp
minDamage
maxDamage
defense
behaviour
primaryAbility
secondaryAbility
statusEffect
resistance
baseScore
minPlayerLevel
maxPlayerLevel
requiredDifficulty

package templates;

import com.ftn.sbnz.model.models.Enemy;
import com.ftn.sbnz.model.models.Player;
import com.ftn.sbnz.model.models.GameContext;

global java.util.List enemyCandidates;

template "enemy-generation-rules"

rule "Generate Enemy @{row.rowNumber} - @{enemyName}"
    agenda-group "template-generation"
    salience 100
    when
        $context : GameContext(region == "@{region}")
        $player : Player(level >= @{minPlayerLevel}, level <= @{maxPlayerLevel})
    then
        Enemy enemy = new Enemy("@{enemyName}", "@{enemyType}");
        enemy.setRegion("@{region}");
        enemy.setHp(@{minHp} + (Math.random() * (@{maxHp} - @{minHp})));
        enemy.setDamage(@{minDamage} + (Math.random() * (@{maxDamage} - @{minDamage})));
        enemy.setDefense(@{defense});
        enemy.setBehaviour("@{behaviour}");
        enemy.addAbility("@{primaryAbility}");
        enemy.addAbility("@{secondaryAbility}");
        enemy.addStatusEffect("@{statusEffect}");
        enemy.addResistance("@{resistance}");
        enemy.setScore(@{baseScore});
        enemyCandidates.add(enemy);
        insert(enemy);
        System.out.println("Template Generated: @{enemyName} for @{region}");
end

end template